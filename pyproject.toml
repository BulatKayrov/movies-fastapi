[project]
name = "pythonproject2"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[all]>=0.115.12",
    "loguru>=0.7.3",
    "prometheus-fastapi-instrumentator>=7.1.0",
    "redis[hiredis]>=6.1.0",
    "ruff>=0.11.12",
]


# mypy
[tool.mypy]
#strict = true

# ruff
[tool.ruff]
required-version = ">= 0.11.12"
# игнорирование
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    '.venv'
]

# откуда проверять
src = ['movie-app']

# Same as Black.
line-length = 88
indent-width = 4

# с каким питоном работаем
target-version = "py313"

[tool.ruff.lint]
select = [
    "FAST", # FastAPI
    "ANN", # flake8-annotation
    "I", # isort
    "F", # PyFlakes
]
ignore = []

# то что ruff может сам починить
unfixable = []
# Игнорировать определенный файл правилом
[tool.ruff.lint.extend-per-file-ignores]
"manage.py" = ["ALL"]

[dependency-groups]
dev = [
    "coverage>=7.9.2",
    "pre-commit>=4.2.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
]

# pytest settings
[tool.pytest.ini_options]
minversion = "8.4"
addopts = "-ra -q -v --strict-markers"
log_cli = true
log_cli_level = "INFO"
markers = ["apitest: test any http api call"]


# uv
[tool.uv]
required-version = "~=0.7.20"
